import{S as t,b as r,s as _,W as i,q as p,X as b,l as d,n as a,j as h}from"./framework.40d14ebd.js";function E(o){let s,c=`<h1 id="adr-004-realtime-data-channels" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#adr-004-realtime-data-channels" aria-hidden="true">#</a> ADR-004: Realtime Data Channels</h1>
<p class="__vbk__"><a href="https://hackmd.io/iomfscGXR1ycI_67NrLvMw" target="_blank" rel="noopener noreferrer" class="__vbk__"><img src="https://hackmd.io/iomfscGXR1ycI_67NrLvMw/badge" alt="hackmd-github-sync-badge"><OutboundLink></OutboundLink></a></p>
<h2 id="abstract" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#abstract" aria-hidden="true">#</a> Abstract</h2>
<p class="__vbk__">The fundamental communication component across all Sonr nodes is the <code class="__vbk__">channel</code>.
By utilizing data and transport agnostic realtime streams between nodes, we effectively have realtime structured data transmission at any point in the world.</p>
<h2 id="primer" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#primer" aria-hidden="true">#</a> Primer</h2>
<p class="__vbk__">The Sonr channel implementation requires prior knowledge of the following definitions before implementation.</p>
<h3 id="multiaddr" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#multiaddr" aria-hidden="true">#</a> <code class="__vbk__">multiaddr</code></h3>
<p class="__vbk__">Multiaddr's are self describing addresses that operate on any network protocol.
They provide human-readable and efficient machine-readable representations.
<a href="https://github.com/multiformats/multiaddr" target="_blank" rel="noopener noreferrer" class="__vbk__">The multiaddr spec<OutboundLink></OutboundLink></a> by protocol labs provides further details about the mechanism.</p>
<h3 id="pub-sub" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#pub-sub" aria-hidden="true">#</a> <code class="__vbk__">pub-sub</code></h3>
<p class="__vbk__">The Sonr implementation follows the standard publish/subscribe model present with the modern web, with the caveat that it operates on a peer-to-peer node.
In particular, Sonr utilizes the <a href="https://docs.libp2p.io/concepts/publish-subscribe/" target="_blank" rel="noopener noreferrer" class="__vbk__">gossip-sub implementation specification<OutboundLink></OutboundLink></a> to manage sending messages between peers on the network.</p>
<h3 id="service-endpoint" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#service-endpoint" aria-hidden="true">#</a> <code class="__vbk__">Service endpoint</code></h3>
<p class="__vbk__">A <code class="__vbk__">Service endpoint</code> describes a <code class="__vbk__">url</code> which is associated to the did.</p>
<h3 id="topic" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#topic" aria-hidden="true">#</a> <code class="__vbk__">Topic</code></h3>
<p class="__vbk__">A <code class="__vbk__">Topic</code> is a series of contexts which are denoted by '/' these contexts are heigharical and facilitate routing of data.</p>
<h3 id="temporary-channel" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#temporary-channel" aria-hidden="true">#</a> <code class="__vbk__">Temporary Channel</code></h3>
<p class="__vbk__">A temporary channel is a channel that exists between two <code class="__vbk__">Peers</code> on the Sonr network.
This channel exists for as long as the application which defines it keeps the channel active.
Once the channel is <code class="__vbk__">deactivated</code> it is destroyed.
Messages passed between the two <code class="__vbk__">Peers</code> are not persistent in this mode.
Temporary Channels communicate on specified topics and utilize the <code class="__vbk__">Exchange</code> model within Sonr.</p>
<h3 id="persistent-channel" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#persistent-channel" aria-hidden="true">#</a> <code class="__vbk__">Persistent Channel</code></h3>
<p class="__vbk__">A persistent channel is a channel which mirrors the implementation of a <code class="__vbk__">Temporary Channel</code> but has more functionality.</p>
<ul class="__vbk__">
<li class="__vbk__">A <code class="__vbk__">Schema</code> is defined for the data sent between two <code class="__vbk__">Peers</code></li>
<li class="__vbk__">On creation, a new <code class="__vbk__">Bucket</code> is created for the channel</li>
<li class="__vbk__">Data <code class="__vbk__">published</code> on the channel is also stored in the <code class="__vbk__">Channel</code>'s bucket</li>
</ul>
<h2 id="objective" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#objective" aria-hidden="true">#</a> Objective</h2>
<ul class="__vbk__">
<li class="__vbk__">An Open transport agnostic communication mechanism</li>
<li class="__vbk__">Accessibility for users to listen to channels based on application</li>
<li class="__vbk__">A mechanism for developers to create channels for their individual development needs</li>
<li class="__vbk__">Structured Object reperesentation as the payload body between messages, as specified in <a href="http://docs.sonr.io/articles/reference/adr-002" target="_blank" rel="noopener noreferrer" class="__vbk__">ADR-002<OutboundLink></OutboundLink></a></li>
</ul>
<h2 id="addressing-identifiying-topics" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#addressing-identifiying-topics" aria-hidden="true">#</a> Addressing &amp; Identifiying Topics</h2>
<p class="__vbk__">In Sonr, the name of a channel follows the <code class="__vbk__">multiaddr</code> specification for individual protocols that operate for a specific application. When resolving a <code class="__vbk__">DIDDocument</code> of a particular application, developers are also provided a list of channels present for the application under its <code class="__vbk__">Service endpoint</code> property.</p>
<h3 id="topics" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#topics" aria-hidden="true">#</a> Topics</h3>
<p class="__vbk__">Topics in the Sonr channel mechanism are defined as Developer created persistent stream endpoints where users can join and are always ensured to return pre-defined structured data, as per <a href="http://docs.sonr.io/articles/reference/adr-002" target="_blank" rel="noopener noreferrer" class="__vbk__">ADR-002<OutboundLink></OutboundLink></a>.</p>
<p class="__vbk__"><strong class="__vbk__">Topic Name Representation</strong></p>
<p class="__vbk__"><code class="__vbk__">/sonr/channels/[applicationName]/[version]/[topicName]</code></p>
<p class="__vbk__"><strong class="__vbk__">Example Topic Identifier</strong></p>
<p class="__vbk__"><code class="__vbk__">/sonr/channels/beam/v1/SonrGroupChat</code></p>
<h3 id="protocols" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#protocols" aria-hidden="true">#</a> Protocols</h3>
<p class="__vbk__">Protocols in the Sonr channel mechanism are defined as having pre-packaged spec-compliant functionality, accessible to both users to interact and developers to leverage. For example one of the provided core protocols by the Sonr Team is our <a href="https://archive.fosdem.org/2020/schedule/event/dip_p2p_matrix/" target="_blank" rel="noopener noreferrer" class="__vbk__">Libp2p Matrix Integration<OutboundLink></OutboundLink></a>.</p>
<h2 id="client-side-interaction-ephemeral-channels" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#client-side-interaction-ephemeral-channels" aria-hidden="true">#</a> Client Side Interaction (Ephemeral Channels)</h2>
<h2 id="description" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#description" aria-hidden="true">#</a> Description</h2>
<p class="__vbk__">The <code class="__vbk__">Client side</code>, or <code class="__vbk__">Motor</code> implementation of <code class="__vbk__">Channels</code> utilizes the <code class="__vbk__">Sonr</code> exchange protocol. Exchange protocol is in charge of routing messages between <code class="__vbk__">Peers</code>. The methods defined in the below section wrap the <code class="__vbk__">Exchange protcol</code> in order to implement described functionality.</p>
<h2 id="relationship-between-channel-instance-and-topics" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#relationship-between-channel-instance-and-topics" aria-hidden="true">#</a> Relationship between Channel instance and Topics</h2>
<p class="__vbk__">Each channel Object created is for a single <code class="__vbk__">topic</code> each topic is then associated with that channel for both <code class="__vbk__">publishing</code> and <code class="__vbk__">listening</code> on <code class="__vbk__">topics</code>.</p>
<h2 id="methods" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#methods" aria-hidden="true">#</a> Methods</h2>
<p class="__vbk__">The following methods are provided by Sonr's client-side Motor package, to be leveraged by frontends powered by the Sonr ecosystem.</p>
<h3 id="listen" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#listen" aria-hidden="true">#</a> <code class="__vbk__">Listen()</code></h3>
<p class="__vbk__"><code class="__vbk__">topicName</code>
: string</p>
<p class="__vbk__">When a channel has succesfully been routed and verified, the client is returned a <code class="__vbk__">Channel</code> definition this facilitates communication on the specified topic when other <code class="__vbk__">Peers</code> that are also <code class="__vbk__">Listening</code> on the given <code class="__vbk__">Topic</code></p>
<h3 id="publish" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#publish" aria-hidden="true">#</a> <code class="__vbk__">Publish()</code></h3>
<p class="__vbk__"><code class="__vbk__">topicName</code>
: string</p>
<p class="__vbk__"><code class="__vbk__">body</code>
: buffer</p>
<p class="__vbk__">Calling a post method to the endpoint results in the client posting a message to the underlying <code class="__vbk__">PubSub</code> topic. The message will successfully publish to the channel if the provided body message correctly maps to the <code class="__vbk__">DID</code> and object reference involved with the channel.</p>
<h2 id="channels-on-chain-persistent-channel-definitions" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#channels-on-chain-persistent-channel-definitions" aria-hidden="true">#</a> Channels on chain (Persistent Channel Definitions)</h2>
<h3 id="description-1" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#description-1" aria-hidden="true">#</a> Description</h3>
<p class="__vbk__"><code class="__vbk__">Persistent</code> channels have the same behavior of <code class="__vbk__">Ephemeral</code> changes. When said channel is created the following record is stored on chain.</p>
<h3 id="models" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#models" aria-hidden="true">#</a> Models</h3>
<h4 id="who-is-model" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#who-is-model" aria-hidden="true">#</a> who is model</h4>
<div class="language-go ext-go line-numbers-mode __vbk__"><pre class="shiki __vbk__" style="background-color: #2e3440ff"><code><span class="line"><span style="color: #D8DEE9FF">HowIs </span><span style="color: #ECEFF4">&#123;</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// Did is the DID of the channel</span></span>
<span class="line"><span style="color: #D8DEE9FF">	Did</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #81A1C1">string</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// Document is the DID Document of the registered name and account encoded as JSON</span></span>
<span class="line"><span style="color: #D8DEE9FF">	Creator</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #81A1C1">string</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// ChannelDoc is the structure of the channel encoded as JSON</span></span>
<span class="line"><span style="color: #D8DEE9FF">	Channel</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> ChannelDoc</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// Timestamp is the time of the last update of the DID Document</span></span>
<span class="line"><span style="color: #D8DEE9FF">	Timestamp </span><span style="color: #81A1C1">int64</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// Is Active is the status of the DID Document</span></span>
<span class="line"><span style="color: #D8DEE9FF">	IsActive </span><span style="color: #81A1C1">bool</span></span>
<span class="line"><span style="color: #ECEFF4">&#125;</span></span>
<span class="line"></span></code></pre><div class="line-numbers __vbk__"><span class="line-number __vbk__">1</span><br><span class="line-number __vbk__">2</span><br><span class="line-number __vbk__">3</span><br><span class="line-number __vbk__">4</span><br><span class="line-number __vbk__">5</span><br><span class="line-number __vbk__">6</span><br><span class="line-number __vbk__">7</span><br><span class="line-number __vbk__">8</span><br><span class="line-number __vbk__">9</span><br><span class="line-number __vbk__">10</span><br><span class="line-number __vbk__">11</span><br><span class="line-number __vbk__">12</span><br></div></div><div class="language-go ext-go line-numbers-mode __vbk__"><pre class="shiki __vbk__" style="background-color: #2e3440ff"><code><span class="line"><span style="color: #616E88">// options is a collection of options for the beam.</span></span>
<span class="line"><span style="color: #D8DEE9FF">options </span><span style="color: #ECEFF4">&#123;</span></span>
<span class="line"><span style="color: #D8DEE9FF">    ttl</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> time</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">Duration</span></span>
<span class="line"><span style="color: #D8DEE9FF">    capacity</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #81A1C1">int</span></span>
<span class="line"><span style="color: #ECEFF4">&#125;</span></span>
<span class="line"></span></code></pre><div class="line-numbers __vbk__"><span class="line-number __vbk__">1</span><br><span class="line-number __vbk__">2</span><br><span class="line-number __vbk__">3</span><br><span class="line-number __vbk__">4</span><br><span class="line-number __vbk__">5</span><br></div></div><h4 id="channel-x-modle-interface-definition-definition" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#channel-x-modle-interface-definition-definition" aria-hidden="true">#</a> Channel X modle interface definition Definition</h4>
<div class="language-go ext-go line-numbers-mode __vbk__"><pre class="shiki __vbk__" style="background-color: #2e3440ff"><code><span class="line"><span style="color: #616E88">// Channel is a pubsub based Key-Value store for Libp2p nodes.</span></span>
<span class="line"><span style="color: #D8DEE9FF">Channel </span><span style="color: #ECEFF4">&#123;</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// Did returns the DID of the channel.</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #88C0D0">Did</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #81A1C1">string</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// Read returns a list of all peers subscribed to the channel topic.</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #88C0D0">Read</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">[]</span><span style="color: #D8DEE9FF">peer</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ID</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// Publish publishes the given message to the channel topic.</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #88C0D0">Publish</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">obj </span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9FF">ot</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">ObjectDoc</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #81A1C1">error</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// Listen subscribes to the beam topic and returns a channel that will</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// receive events.</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #88C0D0">Listen</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">opChan </span><span style="color: #81A1C1">chan</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9FF">ChannelMessage</span><span style="color: #ECEFF4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// Close closes the channel.</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #88C0D0">Close</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #81A1C1">error</span></span>
<span class="line"><span style="color: #ECEFF4">&#125;</span></span>
<span class="line"></span></code></pre><div class="line-numbers __vbk__"><span class="line-number __vbk__">1</span><br><span class="line-number __vbk__">2</span><br><span class="line-number __vbk__">3</span><br><span class="line-number __vbk__">4</span><br><span class="line-number __vbk__">5</span><br><span class="line-number __vbk__">6</span><br><span class="line-number __vbk__">7</span><br><span class="line-number __vbk__">8</span><br><span class="line-number __vbk__">9</span><br><span class="line-number __vbk__">10</span><br><span class="line-number __vbk__">11</span><br><span class="line-number __vbk__">12</span><br><span class="line-number __vbk__">13</span><br><span class="line-number __vbk__">14</span><br><span class="line-number __vbk__">15</span><br><span class="line-number __vbk__">16</span><br><span class="line-number __vbk__">17</span><br><span class="line-number __vbk__">18</span><br></div></div><h3 id="document-schema-and-applications" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#document-schema-and-applications" aria-hidden="true">#</a> Document Schema and applications</h3>
<p class="__vbk__">A <code class="__vbk__">Schema</code> is defined when the <code class="__vbk__">Persistant</code> channel is created. Creation of said channel will create a <code class="__vbk__">Transaction</code> on chain. <strong class="__vbk__">only</strong> persistant channels use this mechanism.</p>
<h3 id="createchannel" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#createchannel" aria-hidden="true">#</a> <code class="__vbk__">CreateChannel</code></h3>
<h4 id="parameters" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#parameters" aria-hidden="true">#</a> Parameters</h4>
<p class="__vbk__"><code class="__vbk__">Creator</code>
: string</p>
<p class="__vbk__"><code class="__vbk__">Label</code>
: string</p>
<p class="__vbk__"><code class="__vbk__">Description</code>
: string</p>
<p class="__vbk__"><code class="__vbk__">RegisteredObject</code>
: ObjectDoc</p>
<p class="__vbk__">Creates a new Channel definition for an application. The method requires the DID of the application or user, a label for human-readable representation, description for the functionality of the channel, and a registered object for defining what structured data is returned by the channel.</p>
<blockquote class="__vbk__">
<p class="__vbk__">When the <code class="__vbk__">channel</code> is created, the created object is set to <code class="__vbk__">Listening</code> as side effect.</p>
</blockquote>
<p class="__vbk__"><strong class="__vbk__">Response</strong></p>
<div class="language-json ext-json line-numbers-mode __vbk__"><pre class="shiki __vbk__" style="background-color: #2e3440ff"><code><span class="line"><span style="color: #ECEFF4">&#123;</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #D8DEE9">type</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tx/MsgCreateChannel</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #D8DEE9">body</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&#123;</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">code</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #B48EAD">200</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">did</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">did:snr:abc123</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">channel</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&#123;</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">label</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">test</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">description</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">A example channel</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">registeredObject</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">[</span><span style="color: #D8DEE9">...</span><span style="color: #ECEFF4">]</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// See ADR-002</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&#125;</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&#125;</span></span>
<span class="line"><span style="color: #ECEFF4">&#125;</span></span>
<span class="line"></span></code></pre><div class="line-numbers __vbk__"><span class="line-number __vbk__">1</span><br><span class="line-number __vbk__">2</span><br><span class="line-number __vbk__">3</span><br><span class="line-number __vbk__">4</span><br><span class="line-number __vbk__">5</span><br><span class="line-number __vbk__">6</span><br><span class="line-number __vbk__">7</span><br><span class="line-number __vbk__">8</span><br><span class="line-number __vbk__">9</span><br><span class="line-number __vbk__">10</span><br><span class="line-number __vbk__">11</span><br><span class="line-number __vbk__">12</span><br></div></div><h3 id="updatechannel" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#updatechannel" aria-hidden="true">#</a> <code class="__vbk__">UpdateChannel</code></h3>
<h4 id="parameters-1" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>
<p class="__vbk__"><code class="__vbk__">Creator</code>
: string</p>
<p class="__vbk__"><code class="__vbk__">Label</code>
: string (optional)</p>
<p class="__vbk__"><code class="__vbk__">Description</code>
: string (optional)</p>
<p class="__vbk__"><code class="__vbk__">RegisteredObject</code>
: sonrio.sonr.object.ObjectDoc (optional)</p>
<p class="__vbk__">Updates a Channel's information, all data is optional for update. However, the entire <code class="__vbk__">object document</code> must be updated as that is considered a single property in this model.</p>
<p class="__vbk__"><strong class="__vbk__">Response</strong></p>
<div class="language-json ext-json line-numbers-mode __vbk__"><pre class="shiki __vbk__" style="background-color: #2e3440ff"><code><span class="line"><span style="color: #ECEFF4">&#123;</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #D8DEE9">type</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tx/MsgUpdateChannel</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #D8DEE9">body</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&#123;</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">code</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #B48EAD">200</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">did</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">did:snr:abc123</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">channel</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&#123;</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">label</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">test</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">description</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">A example channel</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">registeredObject</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">[</span><span style="color: #D8DEE9">...</span><span style="color: #ECEFF4">]</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #616E88">// See ADR-002</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&#125;</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&#125;</span></span>
<span class="line"><span style="color: #ECEFF4">&#125;</span></span>
<span class="line"></span></code></pre><div class="line-numbers __vbk__"><span class="line-number __vbk__">1</span><br><span class="line-number __vbk__">2</span><br><span class="line-number __vbk__">3</span><br><span class="line-number __vbk__">4</span><br><span class="line-number __vbk__">5</span><br><span class="line-number __vbk__">6</span><br><span class="line-number __vbk__">7</span><br><span class="line-number __vbk__">8</span><br><span class="line-number __vbk__">9</span><br><span class="line-number __vbk__">10</span><br><span class="line-number __vbk__">11</span><br><span class="line-number __vbk__">12</span><br></div></div><h3 id="deactivatechannel" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#deactivatechannel" aria-hidden="true">#</a> <code class="__vbk__">DeactivateChannel</code></h3>
<p class="__vbk__"><code class="__vbk__">creator</code>:
: DID of the creator of the channel.</p>
<p class="__vbk__"><code class="__vbk__">label</code>
: A human readable label to assign to the channel.</p>
<p class="__vbk__">Utilized by developers to effectively eliminate any existing structured channel representation for a given application. A record will be created on change flagging the <code class="__vbk__">isActive</code> property to false. Denoting the channel is no longer active.</p>
<p class="__vbk__"><strong class="__vbk__">Response</strong></p>
<div class="language-json ext-json line-numbers-mode __vbk__"><pre class="shiki __vbk__" style="background-color: #2e3440ff"><code><span class="line"><span style="color: #ECEFF4">&#123;</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #D8DEE9">type</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">tx/MsgDeleteChannel</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #D8DEE9">body</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&#123;</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">code</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #B48EAD">200</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #8FBCBB">did</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF">&nbsp;</span><span style="color: #ECEFF4">&quot;</span><span style="color: #A3BE8C">did:snr:abc123</span><span style="color: #ECEFF4">&quot;</span><span style="color: #ECEFF4">,</span></span>
<span class="line"><span style="color: #D8DEE9FF">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #ECEFF4">&#125;</span></span>
<span class="line"><span style="color: #ECEFF4">&#125;</span></span>
<span class="line"></span></code></pre><div class="line-numbers __vbk__"><span class="line-number __vbk__">1</span><br><span class="line-number __vbk__">2</span><br><span class="line-number __vbk__">3</span><br><span class="line-number __vbk__">4</span><br><span class="line-number __vbk__">5</span><br><span class="line-number __vbk__">6</span><br><span class="line-number __vbk__">7</span><br></div></div><h2 id="sequence-diagrams" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#sequence-diagrams" aria-hidden="true">#</a> Sequence Diagrams</h2>
<hr>
<h3 id="references" tabindex="-1" class="__vbk__"><a class="header-anchor __vbk__" href="#references" aria-hidden="true">#</a> References</h3>
<ul class="__vbk__">
<li class="__vbk__"><a href="https://docs.libp2p.io/concepts/publish-subscribe/" target="_blank" rel="noopener noreferrer" class="__vbk__">Libp2p Pubsub<OutboundLink></OutboundLink></a></li>
<li class="__vbk__"><a href="https://github.com/multiformats/multiaddr" target="_blank" rel="noopener noreferrer" class="__vbk__">MultiAddr Specification<OutboundLink></OutboundLink></a></li>
<li class="__vbk__"><a href="http://localhost:3000/articles/reference/adr-003" target="_blank" rel="noopener noreferrer" class="__vbk__">Sonr ADR-003<OutboundLink></OutboundLink></a></li>
</ul>`,e;return{c(){s=new i(!1),e=p(),this.h()},l(n){s=b(n,!1),e=p(),this.h()},h(){s.a=e},m(n,l){s.m(c,n,l),d(n,e,l)},p:a,i:a,o:a,d(n){n&&h(e),n&&s.d()}}}const v={excerpt:"",headers:[{level:2,title:"Abstract",slug:"abstract",children:[]},{level:2,title:"Primer",slug:"primer",children:[{level:3,title:"multiaddr",slug:"multiaddr",children:[]},{level:3,title:"pub-sub",slug:"pub-sub",children:[]},{level:3,title:"Service endpoint",slug:"service-endpoint",children:[]},{level:3,title:"Topic",slug:"topic",children:[]},{level:3,title:"Temporary Channel",slug:"temporary-channel",children:[]},{level:3,title:"Persistent Channel",slug:"persistent-channel",children:[]}]},{level:2,title:"Objective",slug:"objective",children:[]},{level:2,title:"Addressing & Identifiying Topics",slug:"addressing-identifiying-topics",children:[{level:3,title:"Topics",slug:"topics",children:[]},{level:3,title:"Protocols",slug:"protocols",children:[]}]},{level:2,title:"Client Side Interaction (Ephemeral Channels)",slug:"client-side-interaction-ephemeral-channels",children:[]},{level:2,title:"Description",slug:"description",children:[]},{level:2,title:"Relationship between Channel instance and Topics",slug:"relationship-between-channel-instance-and-topics",children:[]},{level:2,title:"Methods",slug:"methods",children:[{level:3,title:"Listen()",slug:"listen",children:[]},{level:3,title:"Publish()",slug:"publish",children:[]}]},{level:2,title:"Channels on chain (Persistent Channel Definitions)",slug:"channels-on-chain-persistent-channel-definitions",children:[{level:3,title:"Description",slug:"description-1",children:[]},{level:3,title:"Models",slug:"models",children:[]},{level:3,title:"Document Schema and applications",slug:"document-schema-and-applications",children:[]},{level:3,title:"CreateChannel",slug:"createchannel",children:[]},{level:3,title:"UpdateChannel",slug:"updatechannel",children:[]},{level:3,title:"DeactivateChannel",slug:"deactivatechannel",children:[]}]},{level:2,title:"Sequence Diagrams",slug:"sequence-diagrams",children:[{level:3,title:"References",slug:"references",children:[]}]}],title:"4. Peer-to-Peer Streams",frontmatter:{title:"4. Peer-to-Peer Streams"},lastUpdated:1657820692116};class u extends t{constructor(s){super(),r(this,s,null,E,_,{})}}export{v as __pageMeta,u as default};
